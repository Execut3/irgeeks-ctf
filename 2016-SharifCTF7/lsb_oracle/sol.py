#!/usr/bin/python

from subprocess import Popen, PIPE

e = 65537
n = 120357855677795403326899325832599223460081551820351966764960386843755808156627131345464795713923271678835256422889567749230248389850643801263972231981347496433824450373318688699355320061986161918732508402417281836789242987168090513784426195519707785324458125521673657185406738054328228404365636320530340758959
c = 2201077887205099886799419505257984908140690335465327695978150425602737431754769971309809434546937184700758848191008699273369652758836177602723960420562062515168299835193154932988833308912059796574355781073624762083196012981428684386588839182461902362533633141657081892129830969230482783192049720588548332813
k = 1
lb = 0
ub = n

p = Popen(["lsb_oracle.vmp.exe", "/decrypt"], stdout=PIPE, stdin=PIPE)

def oracle(c):
	print c
	p.stdout.readline()
	p.stdin.write(str(c)+"\n")
	v = p.stdout.readline().strip()
	print "oracle", v
	return int(v)


while True:
	o = oracle((pow(2, k*e, n) * c) % n)
	if o == 1:
		lb = (ub + lb) / 2
	else:
		ub = (ub + lb) / 2
	print repr(lb)
	if lb == ub:
		break
	k += 1
print
print ("0"+hex(lb)[2:-1]).decode("hex")
# brute force last byte 


